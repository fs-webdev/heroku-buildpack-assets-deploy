#!/bin/bash

# fail fast
set -o errexit
set -euxo pipefail

indent() {
  sed -u 's/^/       /'
}

BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)

# enter the BUILD_DIR
cd $1

# $3 is the ENV_DIR
ENV_DIR=$3

# Set environment variables
[ -f "$ENV_DIR/DO_DEPLOY" ] && export "DO_DEPLOY=$(cat $ENV_DIR/DO_DEPLOY)"
[ -f "$ENV_DIR/CDN_BASE_URL" ] && export "CDN_BASE_URL=$(cat $ENV_DIR/CDN_BASE_URL)"
[ -f "$ENV_DIR/SIMP_CHINESE_EX" ] && export "SIMP_CHINESE_EX=$(cat $ENV_DIR/SIMP_CHINESE_EX)"
[ -f "$ENV_DIR/TAAS_EX" ] && export "TAAS_EX=$(cat $ENV_DIR/TAAS_EX)"
[ -f "$ENV_DIR/APP_OVERRIDE_LOCALES" ] && export "APP_OVERRIDE_LOCALES=$(cat $ENV_DIR/APP_OVERRIDE_LOCALES)"

# If there was no file, move along
[ -z "$DO_DEPLOY" ] && exit 0

# If the file contents weren't "1", move along
[ "$DO_DEPLOY" -ne "1" ] && echo "Skipping asset deployment for DO_DEPLOY != '1'" && exit 0

# default SIMP_CHINESE_EX to false
: "${SIMP_CHINESE_EX:=false}"
echo "SIMP_CHINESE_EX: $SIMP_CHINESE_EX"

# Need node on the path
PATH=$PATH:$1/vendor/node/bin

echo "----------> Compiling assets"
[ -f "./node_modules/gulp/bin/gulp.js" ] && ./node_modules/gulp/bin/gulp.js dist --cdnUrl=$CDN_BASE_URL | indent

### Send deps to Frontier Dashboard
if [ -f $1/package.json ]; then
  BUILD_DIR=$1
  printf "\nFrontier Dashboard steps:\n"
  printf "BUILD DIR files: $(ls -la $BUILD_DIR)\n"
  printf "Scanning deps... " && npm ls --json --prefix ${BUILD_DIR} > ${BUILD_DIR}/deps.json && printf "Done.\n"
  printf "Flattening deps... " && BUILD_DIR=${BUILD_DIR} BP_DIR=${BP_DIR} node ${BP_DIR}/bin/flatten-deps.js && printf "Done.\n"
  printf "Sending deps to Frontier Dashboard... " curl -X POST -H "x-api-key: KrgZiZRMgxNKvH5gew3n6VBxkcradwu9lQrZe5C7" -d "$(cat $BUILD_DIR/deps.json.flat)" https://tiagtww9kj.execute-api.us-east-1.amazonaws.com/dev/app/deploy/snapshot && printf "Done.\n"
  printf "Done with Frontier Dashboard steps\n"
fi

# We have what we want
echo "----------> Deploying assets"
[ -f "./node_modules/frontier-build-tools/node_modules/.bin/cake" ] && ./node_modules/frontier-build-tools/node_modules/.bin/cake assets:deploy | indent && exit 0

# If they have their own version of coffee-script, looking in frontier-build-tools will fail
[ -f "./node_modules/.bin/cake" ] && ./node_modules/.bin/cake assets:deploy | indent && exit 0

# If it didn't exit with the assets deployment, something happened
echo "Something went wrong with the deploy"
exit 1
